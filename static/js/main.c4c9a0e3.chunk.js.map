{"version":3,"sources":["redux/profileReducer.tsx","hoc/withAuthRedirect.tsx","redux/redux-store.tsx","redux/dialogsReducer.tsx","components/Users/Users.module.css","components/Navbar/Navbar.module.css","api/api.ts","redux/authReducer.tsx","components/Navbar/Navbar.tsx","components/News/News.tsx","components/Music/Music.tsx","components/Settings/Settings.tsx","components/common/Paginator/Paginator.tsx","assets/images/user.png","components/Users/User.tsx","components/Users/Users.tsx","redux/users-selectors.ts","components/Users/UsersContainer.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","redux/usersReducer.tsx","assets/images/preloader.svg","components/common/Preloader/Preloader.tsx","components/common/FormsControls/FormsControls.module.css","components/common/FormsControls/FormsControls.tsx","redux/appReducer.tsx","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","utils/validators/validators.ts"],"names":["initialState","posts","id","message","likesCount","profile","status","addPostAC","newPostText","type","setStatus","getUserProfile","userId","dispatch","a","usersAPI","getProfile","response","data","getStatus","profileAPI","updateStatus","resultCode","profileReducer","state","action","newPost","Date","getTime","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","rootReducer","combineReducers","profilePage","dialogsPage","dialogsReducer","usersPage","usersReducer","authReducer","form","formReducer","app","appReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","SEND_MESSAGE","dialogs","name","messages","sendMessageAC","newMessageBody","body","module","exports","instance","axios","create","withCredentials","baseURL","headers","getUsers","currentPage","pageSize","get","then","follow","post","unfollow","delete","console","warn","put","authAPI","me","login","email","password","rememberMe","logout","payload","setAuthUserData","getAuthUserData","length","stopSubmit","_error","Navbar","className","classes","nav","item","activeClassName","activeLink","News","Music","Settings","Paginator","pagesCont","Math","ceil","totalItemsCount","pages","i","push","portionCount","portionSize","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","paginator","onClick","filter","p","map","selectedPage","pageNumber","e","onPageChanged","User","user","followingInProgress","src","photos","small","userPhoto","alt","followed","disabled","some","Users","users","u","getPageSize","getTotalUsersCount","totalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","this","Preloader","React","setCurrentPage","requestUsers","Header","header","logoText","loginBlock","HeaderContainer","LoginReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","validate","required","component","Input","error","formSummaryError","main","formData","withSuspense","Suspense","fallback","ProfileContainer","lazy","DialogsContainer","App","initializedApp","initialized","path","Login","render","ReactDOM","document","getElementById","usersID","toggleIsFetching","toggleFollowingProgress","items","totalCount","preloader","FormControl","meta","touched","children","hasError","formControl","Textarea","input","value","maxLengthCreator","maxLength"],"mappings":"oTAgCIA,EAAe,CACjBC,MAAO,CACL,CAACC,GAAI,EAAGC,QAAS,mBAAoBC,WAAY,IACjD,CAACF,GAAI,EAAGC,QAAS,qBAAuBC,WAAY,KAEtDC,QAAS,KACTC,OAAQ,IA0CGC,EAAY,SAACC,GACxB,MAAO,CACLC,KAAM,mBACND,gBAWSE,EAAY,SAACJ,GACxB,MAAO,CACLG,KAAM,qBACNH,WAISK,EAAiB,SAACC,GAAD,8CAAoB,WAAOC,GAAP,eAAAC,EAAA,sEACzBC,IAASC,WAAWJ,GADK,OAC1CK,EAD0C,OAEhDJ,EAfO,CACLJ,KAAM,2BACNJ,QAasBY,EAASC,OAFe,2CAApB,uDAKjBC,EAAY,SAACP,GAAD,8CAAoB,WAAOC,GAAP,eAAAC,EAAA,sEACpBM,IAAWD,UAAUP,GADD,OACrCK,EADqC,OAE3CJ,EAASH,EAAUO,EAASC,OAFe,2CAApB,uDAKZG,EAAe,SAACf,GAAD,8CAAoB,WAAOO,GAAP,SAAAC,EAAA,sEACvBM,IAAWC,aAAaf,GADD,OAEb,IAFa,OAEjCY,KAAKI,YAChBT,EAASH,EAAUJ,IAHyB,2CAApB,uDAObiB,IAtEe,WAAqF,IAApFC,EAAmF,uDAAzDxB,EAAcyB,EAA2C,uCAEhH,OAAQA,EAAOhB,MACb,IAAK,mBACH,IAAMiB,EAAoB,CACxBxB,IAAI,IAAIyB,MAAOC,UACfzB,QAASsB,EAAOjB,YAChBJ,WAAY,GAEd,OAAO,2BACFoB,GADL,IAEEvB,MAAM,GAAD,mBAAMuB,EAAMvB,OAAZ,CAAmByB,MAI5B,IAAK,2BACH,OAAO,2BACFF,GADL,IAEEnB,QAASoB,EAAOpB,UAGpB,IAAK,qBACH,OAAO,2BACFmB,GADL,IAEElB,OAAQmB,EAAOnB,SAGnB,QACE,OAAOkB,K,mHCnEPK,EAAkB,SAACL,GACzB,MAAO,CACLM,OAAQN,EAAMO,KAAKD,SAId,SAASE,EAAqBC,GAQnC,OAD+BC,YAAQL,EAARK,EANP,SAACC,GAA8B,IAClDL,EAAwBK,EAAxBL,OAAWM,EADsC,YACzBD,EADyB,YAEtD,OAAKL,EACE,cAACG,EAAD,eAAeG,IADF,cAAC,IAAD,CAAUC,GAAI,gB,iCClBpC,yGAgBIC,EAAcC,YAAgB,CAChCC,YAAajB,IACbkB,YAAaC,IACbC,UAAWC,IACXb,KAAMc,IACNC,KAAMC,IACNC,IAAKC,MAGDC,EAAmBC,OAAOC,sCAAwCC,IAC3DC,EAAQC,YAAYjB,EAAaY,EAAiBM,YAAgBC,OAO/EN,OAAOG,MAAQA,G,sFC/BTI,EAAe,uBAYjB1D,EAAe,CACjB2D,QAAS,CACP,CAACzD,GAAI,EAAG0D,KAAM,QACd,CAAC1D,GAAI,EAAG0D,KAAM,SACd,CAAC1D,GAAI,EAAG0D,KAAM,UACd,CAAC1D,GAAI,EAAG0D,KAAM,QACd,CAAC1D,GAAI,EAAG0D,KAAM,WACd,CAAC1D,GAAI,EAAG0D,KAAM,WAEhBC,SAAU,CACR,CAAC3D,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,gBACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,kBACjB,CAACD,GAAI,EAAGC,QAAS,SACjB,CAACD,GAAI,EAAGC,QAAS,SAsBR2D,EAAgB,SAACC,GAC5B,MAAO,CACLtD,KAAMiD,EAAcK,mBAITrB,IAtBe,WAAqF,IAApFlB,EAAmF,uDAAzDxB,EAAcyB,EAA2C,uCAEhH,OAAQA,EAAOhB,MACb,KAAKiD,EACH,IAAIM,EAAOvC,EAAOsC,eAElB,OAAO,2BACFvC,GADL,IAEEqC,SAAS,GAAD,mBAAMrC,EAAMqC,UAAZ,CAAsB,CAAC3D,GAAI,EAAGC,QAAS6D,OAGnD,QACE,OAAOxC,K,oBC9CbyC,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,IAAM,oBAAoB,KAAO,qBAAqB,WAAa,6B,sDCDrF,mHAEMC,EAFN,OAEiBC,EAAMC,OAAO,CAC5BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CAAC,UAAW,0CAGVzD,EAAW,CACtB0D,SADsB,SACbC,EAAqBC,GAC5B,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAgDC,IACpDE,MAAK,SAAA5D,GACF,OAAOA,EAASC,SAIxB4D,OARsB,SAQflE,GACL,OAAOuD,EAASY,KAAT,iBAAwBnE,KAGjCoE,SAZsB,SAYbpE,GACP,OAAOuD,EAASc,OAAT,iBAA0BrE,KAEnCI,WAfsB,SAeXJ,GAET,OADAsE,QAAQC,KAAK,6CACN/D,EAAWJ,WAAWJ,KAIpBQ,EAAa,CACxBJ,WADwB,SACbJ,GACT,OAAOuD,EAASS,IAAI,WAAahE,IAEnCO,UAJwB,SAIdP,GACR,OAAOuD,EAASS,IAAI,kBAAoBhE,IAE1CS,aAPwB,SAOXf,GACX,OAAO6D,EAASiB,IAAT,iBAA+B,CAAC9E,OAAQA,MAItC+E,EAAU,CACrBC,GADqB,WAEnB,OAAOnB,EAASS,IAAT,YAETW,MAJqB,SAIfC,EAAeC,GAAgD,IAA9BC,EAA6B,wDAClE,OAAOvB,EAASY,KAAT,aAA4B,CAACS,QAAOC,WAAUC,gBAEvDC,OAPqB,WAQnB,OAAOxB,EAASc,OAAT,iB,4NC1CLjF,EAAiC,CACrCE,GAAI,KACJsF,MAAO,KACPD,MAAO,KACPzD,QAAQ,GAUGe,EAAc,WAAoF,IAAnFrB,EAAkF,uDAAxDxB,EAAcyB,EAA0C,uCAC5G,OAAQA,EAAOhB,MACb,IAAK,qBACH,OAAO,2BACFe,GADL,IAEEtB,GAAIuB,EAAOmE,QAAQ1F,GACnB4B,OAAQL,EAAOmE,QAAQ9D,OACvByD,MAAO9D,EAAOmE,QAAQL,MACtBC,MAAO/D,EAAOmE,QAAQJ,QAG1B,QACE,OAAOhE,IAIAqE,EAAkB,SAAC3F,EAAmBsF,EAAsBD,EAAsBzD,GAC7F,MAAO,CACLrB,KAAM,qBAAsBmF,QAAS,CAAC1F,KAAIsF,QAAOD,QAAOzD,YAI/CgE,EAAkB,yDAAM,WAAOjF,GAAP,uBAAAC,EAAA,sEACZuE,IAAQC,KADI,OAEF,KAD3BrE,EAD6B,QAEtBC,KAAKI,aAAmB,EACVL,EAASC,KAAKA,KAAlChB,EAD6B,EAC7BA,GAAIqF,EADyB,EACzBA,MAAOC,EADkB,EAClBA,MAChB3E,EAASgF,EAAgB3F,EAAIsF,EAAOD,GAAO,KAJV,2CAAN,uDAUlBA,EAAQ,SAACC,EAAeC,EAAkBC,GAAlC,8CAAqE,WAAO7E,GAAP,iBAAAC,EAAA,sEACjEuE,IAAQE,MAAMC,EAAOC,EAAUC,GADkC,OAEvD,KAD3BzE,EADkF,QAE3EC,KAAKI,WAChBT,EAASiF,MAEH3F,EAAUc,EAASC,KAAK2C,SAASkC,OAAS,EAAI9E,EAASC,KAAK2C,SAAS,GAAK,aAChFhD,EAASmF,YAAW,QAAS,CAACC,OAAQ9F,MANgD,2CAArE,uDAURwF,EAAS,yDAAM,WAAO9E,GAAP,SAAAC,EAAA,sEACHuE,IAAQM,SADL,OAEO,IAFP,OAEbzE,KAAKI,YAChBT,EAASgF,EAAgB,KAAM,KAAM,MAAM,IAHnB,2CAAN,wD,sJChDPK,EAXA,WACb,OAAO,sBAAKC,UAAWC,IAAQC,IAAxB,UACL,qBAAKF,UAAWC,IAAQE,KAAxB,SAA8B,cAAC,IAAD,CAASjE,GAAG,WAAWkE,gBAAiBH,IAAQI,WAAhD,uBAC9B,qBAAKL,UAAWC,IAAQE,KAAxB,SAA8B,cAAC,IAAD,CAASjE,GAAG,WAAWkE,gBAAiBH,IAAQI,WAAhD,wBAC9B,qBAAKL,UAAWC,IAAQE,KAAxB,SAA8B,cAAC,IAAD,CAASjE,GAAG,QAAQkE,gBAAiBH,IAAQI,WAA7C,oBAC9B,qBAAKL,UAAWC,IAAQE,KAAxB,SAA8B,cAAC,IAAD,CAASjE,GAAG,SAASkE,gBAAiBH,IAAQI,WAA9C,qBAC9B,qBAAKL,UAAWC,IAAQE,KAAxB,SAA8B,cAAC,IAAD,CAASjE,GAAG,YAAYkE,gBAAiBH,IAAQI,WAAjD,wBAC9B,qBAAKL,UAAWC,IAAQE,KAAxB,SAA8B,cAAC,IAAD,CAASjE,GAAG,SAASkE,gBAAiBH,IAAQI,WAA9C,yB,OCDnBC,EARF,WACX,OACE,wCCMWC,EARD,WACZ,OACE,yCCMWC,EARE,WACf,OACE,4C,mECQOC,EAAY,SAACzE,GAItB,IAFA,IAAI0E,EAAYC,KAAKC,KAAK5E,EAAM6E,gBAAkB7E,EAAMwC,UACpDsC,EAAQ,GACHC,EAAI,EAAGA,GAAKL,EAAWK,IAC5BD,EAAME,KAAKD,GAGf,IAAIE,EAAeN,KAAKC,KAAKF,EAAY1E,EAAMkF,aARJ,EASHC,mBAAS,GATN,mBAStCC,EATsC,KASvBC,EATuB,KAUrCC,GAAyBF,EAAgB,GAAKpF,EAAMkF,YAAc,EAClEK,EAAyBH,EAAgBpF,EAAMkF,YAErD,OAAO,sBAAKlB,UAAWwB,IAAGvB,IAAQwB,WAA3B,UACJL,EAAgB,GACf,wBAAQM,QAAS,WACfL,EAAiBD,EAAgB,IADnC,kBAGDN,EACEa,QAAO,SAAAC,GAAC,OAAIA,GAAKN,GAAyBM,GAAKL,KAC/CM,KAAI,SAAAD,GACH,OAAO,sBAAM5B,UAAWwB,IAAG,eACxBvB,IAAQ6B,aAAe9F,EAAMuC,cAAgBqD,GAC7C3B,IAAQ8B,YAEEL,QAAS,SAACM,GACRhG,EAAMiG,cAAcL,IAL5B,SAMUA,GAHCA,MAKrBX,EAAeG,GACd,wBAAQM,QAAS,WACfL,EAAiBD,EAAgB,IADnC,sB,kBC1CS,MAA0B,iCCa9Bc,EAAO,SAAC,GAA8D,IAA7DC,EAA4D,EAA5DA,KAAMxD,EAAsD,EAAtDA,OAAQE,EAA8C,EAA9CA,SAAUuD,EAAoC,EAApCA,oBAC1C,OACG,gCACC,iCACE,8BACE,cAAC,IAAD,CAASlG,GAAI,YAAciG,EAAKpI,GAAhC,SACF,qBAAKsI,IAA0B,MAArBF,EAAKG,OAAOC,MAAgBJ,EAAKG,OAAOC,MAAQC,EACrDxC,UAAWC,IAAQuC,UAAWC,IAAK,aAG1C,8BACGN,EAAKO,SACF,wBAAQC,SAAUP,EAAoBQ,MAAK,SAAA7I,GAAE,OAAIA,IAAOoI,EAAKpI,MACrD2H,QAAS,WACP7C,EAASsD,EAAKpI,KAFxB,sBAIA,wBAAQ4I,SAAUP,EAAoBQ,MAAK,SAAA7I,GAAE,OAAIA,IAAOoI,EAAKpI,MACrD2H,QAAS,WACP/C,EAAOwD,EAAKpI,KAFtB,yBAKN,iCACN,iCACE,8BAAMoI,EAAK1E,OACX,8BAAM0E,EAAKhI,YAEb,iCACE,8BAAM,0BAA8B,8BAAM,iCCxBjC0I,EAAQ,SAAC7G,GAClB,OAAO,gCACL,cAAC,EAAD,CAAWiG,cAAejG,EAAMiG,cACrBpB,gBAAiB7E,EAAM6E,gBACvBrC,SAAUxC,EAAMwC,SAChBD,YAAavC,EAAMuC,YACnB2C,YAAa,KACxB,8BACGlF,EAAM8G,MAAMjB,KAAI,SAAAkB,GAAC,OAAI,cAAC,EAAD,CAAMZ,KAAMY,EAENX,oBAAqBpG,EAAMoG,oBAC3BzD,OAAQ3C,EAAM2C,OACdE,SAAU7C,EAAM6C,UAHXkE,EAAEhJ,a,yBCvB5BuE,EAAW,SAACjD,GACvB,OAAOA,EAAMmB,UAAUsG,OAGZE,EAAc,SAAC3H,GAC1B,OAAOA,EAAMmB,UAAUgC,UAGZyE,EAAqB,SAAC5H,GACjC,OAAOA,EAAMmB,UAAU0G,iBAGZC,EAAiB,SAAC9H,GAC7B,OAAOA,EAAMmB,UAAU+B,aAGZ6E,EAAgB,SAAC/H,GAC5B,OAAOA,EAAMmB,UAAU6G,YAGZC,EAAyB,SAACjI,GACrC,OAAOA,EAAMmB,UAAU4F,qBCkBnBmB,E,4MAKJtB,cAAgB,SAACF,GACf,EAAK/F,MAAMsC,SAASyD,EAAY,EAAK/F,MAAMwC,W,uDAL7C,WACEgF,KAAKxH,MAAMsC,SAASkF,KAAKxH,MAAMuC,YAAaiF,KAAKxH,MAAMwC,Y,oBAQzD,WACE,OAAO,qCACJgF,KAAKxH,MAAMqH,WAAa,cAACI,EAAA,EAAD,IAAe,GACxC,cAAC,EAAD,CACE5C,gBAAiB2C,KAAKxH,MAAMkH,gBAC5B1E,SAAUgF,KAAKxH,MAAMwC,SACrBD,YAAaiF,KAAKxH,MAAMuC,YACxB0D,cAAeuB,KAAKvB,cACpBa,MAAOU,KAAKxH,MAAM8G,MAClBnE,OAAQ6E,KAAKxH,MAAM2C,OACnBE,SAAU2E,KAAKxH,MAAM6C,SACrBuD,oBAAqBoB,KAAKxH,MAAMoG,6B,GArBXsB,IAAM5H,WAsCpBoB,cACbrB,IACAE,aAboB,SAACV,GACrB,MAAO,CACLyH,MAAOxE,EAASjD,GAChBmD,SAAUwE,EAAY3H,GACtB6H,gBAAiBD,EAAmB5H,GACpCkD,YAAa4E,EAAe9H,GAC5BgI,WAAYD,EAAc/H,GAC1B+G,oBAAqBkB,EAAuBjI,MAMrB,CAACsD,WAAQE,aAAU8E,mBAAgBrF,SAAUsF,MAFzD1G,CAGbqG,G,wBC5DaM,EAZA,SAAC7H,GACd,OAAO,yBAAQgE,UAAWC,IAAQ6D,OAA3B,UACL,sBAAM9D,UAAWC,IAAQ8D,SAAzB,uBACA,qBAAK/D,UAAWC,IAAQ+D,WAAxB,SACGhI,EAAML,OAAS,gCAAMK,EAAMoD,MAAZ,MAAqB,wBAAQsC,QAAS1F,EAAMwD,OAAvB,wBACnC,cAAC,IAAD,CAAStD,GAAG,SAAZ,yB,QCMF+H,E,4JACJ,WACE,OAAO,cAAC,EAAD,2BAAYT,KAAKxH,OAAjB,IAAwBL,OAAQ6H,KAAKxH,MAAML,OACnCyD,MAAOoE,KAAKxH,MAAMoD,a,GAHPsE,IAAM5H,WAcrBC,eAPS,SAACV,GAAD,MAA6C,CACnEM,OAAQN,EAAMO,KAAKD,OACnByD,MAAO/D,EAAMO,KAAKwD,MAClBrF,GAAIsB,EAAMO,KAAK7B,GACfsF,MAAOhE,EAAMO,KAAKyD,SAGoB,CAACG,YAA1BzD,CAAmCkI,G,wDCiB5CC,GAAiBC,YAAwB,CAACxH,KAAM,SAA/BwH,EA5B6C,SAACnI,GACnE,OACE,uBAAMoI,SAAUpI,EAAMqI,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,YAAa,QAAS9G,KAAM,QAC5B+G,SAAU,CAACC,MACXC,UAAWC,SAEpB,8BACE,cAACL,EAAA,EAAD,CAAOC,YAAa,WAAY9G,KAAM,WAC/BnD,KAAM,WACNkK,SAAU,CAACC,MACXC,UAAWC,SAEpB,gCACE,cAACL,EAAA,EAAD,CAAOhK,KAAM,WAAYmD,KAAM,aAAciH,UAAWC,OAD1D,iBAIC3I,EAAM4I,OAAS,qBAAK5E,UAAWC,KAAQ4E,iBAAxB,SACb7I,EAAM4I,QAET,8BACE,mDAmCO7I,gBAJS,SAACV,GAAD,MAA0B,CAChDM,OAAQN,EAAMO,KAAKD,UAGmB,CAACyD,WAA1BrD,EA3BD,SAACC,GAKb,OAAIA,EAAML,OACD,cAAC,IAAD,CAAUO,GAAI,aAGhB,sBAAK8D,UAAWC,KAAQ6E,KAAxB,UACL,uCACA,gCACE,6CACA,wDACA,uBACA,iCAAM,uCAAN,yBACA,uBACA,iCAAM,0CAAN,cAEF,cAACZ,GAAD,CAAgBE,SAlBD,SAACW,GAChB/I,EAAMoD,MAAM2F,EAAS1F,MAAO0F,EAASzF,SAAUyF,EAASxF,qB,SCnDrD,SAASyF,GAAiBlJ,GAC/B,OAAO,SAACE,GACP,OAAO,cAAC,IAAMiJ,SAAP,CAAgBC,SAAU,cAACzB,EAAA,EAAD,IAA1B,SACN,cAAC3H,EAAD,eAAeE,OCQnB,IAAMmJ,GAAmBzB,IAAM0B,MAAK,kBAAM,iCACpCC,GAAmB3B,IAAM0B,MAAK,kBAAM,iCAYpCE,G,uKACJ,WACE9B,KAAKxH,MAAMuJ,mB,oBAGb,WACE,OAAK/B,KAAKxH,MAAMwJ,YAKd,cAAC,IAAD,UACE,sBAAKxF,UAAU,cAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,sBAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyF,KAAK,SAASf,UAAWgB,KAChC,cAAC,IAAD,CAAOD,KAAK,oBACLE,OAAQX,GAAaG,MAC5B,cAAC,IAAD,CAAOM,KAAK,WACLE,OAAQX,GAAaK,MAC5B,cAAC,IAAD,CAAOI,KAAK,QAAQf,UAAWpE,IAC/B,cAAC,IAAD,CAAOmF,KAAK,SAASf,UAAWnE,IAChC,cAAC,IAAD,CAAOkF,KAAK,YAAYf,UAAWlE,IACnC,cAAC,IAAD,CAAOiF,KAAK,SAASf,UAAWnB,cAlBjC,cAACE,EAAA,EAAD,Q,GAPK3H,aAqCHC,gBAJS,SAACV,GAAD,MAA0B,CAChDmK,YAAanK,EAAMwB,IAAI2I,eAGe,CAACD,qBAA1BxJ,CAA2CuJ,I,UC5DxDM,IAASD,OACP,cAAC,IAAD,CAAUxI,MAAOA,KAAjB,SACE,cAAC,GAAD,MAEF0I,SAASC,eAAe,U,8PCsBtBjM,EAAiC,CACrCiJ,MAAO,GACPtE,SAAU,GACV0E,gBAAiB,EACjB3E,YAAa,EACboF,eAAgB,EAChBN,YAAY,EACZjB,oBAAqB,IAaV3F,EAAe,WAAoF,IAAnFpB,EAAkF,uDAAxDxB,EAAcyB,EAA0C,uCAC7G,OAAQA,EAAOhB,MACb,IAAK,eACH,OAAO,2BACFe,GADL,IAEEyH,MAAOzH,EAAMyH,MAAMjB,KAAI,SAAAkB,GACrB,OAAIA,EAAEhJ,KAAOuB,EAAOyK,QACX,2BAAIhD,GAAX,IAAcL,UAAU,IAEnBK,OAGb,IAAK,iBACH,OAAO,2BACF1H,GADL,IAEEyH,MAAOzH,EAAMyH,MAAMjB,KAAI,SAAAkB,GACrB,OAAIA,EAAEhJ,KAAOuB,EAAOyK,QACX,2BAAIhD,GAAX,IAAcL,UAAU,IAEnBK,OAGb,IAAK,kBACH,OAAO,2BACF1H,GADL,IAEEyH,MAAOxH,EAAOwH,QAElB,IAAK,yBACH,OAAO,2BACFzH,GADL,IAEEkD,YAAajD,EAAOiD,cAExB,IAAK,8BACH,OAAO,2BACFlD,GADL,IAEE6H,gBAAiB5H,EAAO4H,kBAE5B,IAAK,2BACH,OAAO,2BACF7H,GADL,IAEEgI,WAAY/H,EAAO+H,aAEvB,IAAK,qCACH,OAAO,2BACFhI,GADL,IAEE+G,oBAAqB9G,EAAO+H,WAAP,sBACbhI,EAAM+G,qBADO,CACc9G,EAAOb,SACtCY,EAAM+G,oBAAoBT,QAAO,SAAA5H,GAAE,OAAIA,IAAOuB,EAAOb,YAE7D,QACE,OAAOY,IAuBAsI,EAAiB,SAACpF,GAC7B,MAAO,CACLjE,KAAM,yBACNiE,YAAaA,IAWJyH,EAAmB,SAAC3C,GAC/B,MAAO,CACL/I,KAAM,2BACN+I,eAIS4C,EAA0B,SAAC5C,EAAqB5I,GAC3D,MAAO,CACLH,KAAM,qCACN+I,aAAY5I,WAIHmJ,EAAe,SAACrF,EAAqBC,GAChD,8CAAO,WAAO9D,GAAP,eAAAC,EAAA,6DACLD,EAASsL,GAAiB,IADrB,SAEcpL,IAAS0D,SAASC,EAAaC,GAF7C,OAECzD,EAFD,OAGLL,EAASiJ,EAAepF,IACxB7D,EAASsL,GAAiB,IAC1BtL,EAxCK,CACLJ,KAAM,kBACNwI,MAsCkB/H,EAAKmL,QACvBxL,EA3BK,CACLJ,KAAM,8BACN4I,gBAyB4BnI,EAAKoL,aAN5B,2CAAP,uDAUWxH,EAAS,SAAClE,GACrB,8CAAO,WAAOC,GAAP,SAAAC,EAAA,6DACLD,EAASuL,GAAwB,EAAMxL,IADlC,SAEkBG,IAAS+D,OAAOlE,GAFlC,OAG4B,IAH5B,OAGQM,KAAKI,YAChBT,EA9DG,CACLJ,KAAM,eACNyL,QA4DyBtL,IAEzBC,EAASuL,GAAwB,EAAOxL,IANnC,2CAAP,uDAUWoE,EAAW,SAACpE,GACvB,8CAAO,WAAOC,GAAP,SAAAC,EAAA,6DACLD,EAASuL,GAAwB,EAAMxL,IADlC,SAEkBG,IAASiE,SAASpE,GAFpC,OAG4B,IAH5B,OAGQM,KAAKI,YAChBT,EAnEG,CACLJ,KAAM,iBACNyL,QAiE2BtL,IAE3BC,EAASuL,GAAwB,EAAOxL,IANnC,2CAAP,wD,gCChLa,UAA0B,sC,cCO1BgJ,IAJC,WAChB,OAAO,qBAAKpB,IAAK+D,EAAW3D,IAAK,O,mBCHjC3E,EAAOC,QAAU,CAAC,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB,wCAAwC,KAAO,8B,sJCOpKsI,EAA8C,SAAC,GAAsC,IAAD,IAApCC,KAAOC,EAA6B,EAA7BA,QAAQ3B,EAAqB,EAArBA,MAAO4B,EAAc,EAAdA,SACpEC,EAAWF,GAAW3B,EAC5B,OACE,sBAAK5E,UAAWC,IAAQyG,YAAc,KAAOD,EAAWxG,IAAQ2E,MAAQ,KAAxE,UACE,8BACG4B,IAEFC,GAAY,+BAAO7B,QAKb+B,EAAwC,SAAC3K,GAAW,IACxD4K,EAA6B5K,EAA7B4K,MAAgB3K,GAAaD,EAAtBsK,KADgD,YAC1BtK,EAD0B,mBAE9D,OAAO,cAACqK,EAAD,2BAAiBrK,GAAjB,aAAwB,oDAAc4K,GAAW3K,QAG7C0I,EAAqC,SAAC3I,GAAW,IACrD4K,EAA6B5K,EAA7B4K,MAAgB3K,GAAaD,EAAtBsK,KAD6C,YACvBtK,EADuB,mBAE3D,OAAQ,cAACqK,EAAD,2BAAiBrK,GAAjB,aAAwB,iDAAW4K,GAAW3K,S,uHCrBlDpC,EAAiC,CACrC2L,aAAa,GAOF1I,EAAa,WAAoF,IAAnFzB,EAAkF,uDAAxDxB,EAAcyB,EAA0C,uCAC3G,OAAQA,EAAOhB,MACb,IAAK,0BACH,OAAO,2BACFe,GADL,IAEEmK,aAAa,IAGjB,QACE,OAAOnK,IAUAkK,EAAiB,kBAAkB,SAAC7K,GACjCA,EAASiF,eACfjB,MAAK,WACXhE,EARK,CACLJ,KAAM,kC,mBC5BVwD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,aAAe,kC,mBCArHD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,yBAAyB,WAAa,6B,gCCCnG,oEAAO,IAAM0G,EAA+B,SAACoC,GAC3C,IAAIA,EACJ,MAAO,sBAGIC,EAAmB,SAACC,GAAD,OAA2C,SAACF,GAC1E,GAAIA,GAASA,EAAMjH,OAASmH,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,gB","file":"static/js/main.c4c9a0e3.chunk.js","sourcesContent":["import {Dispatch} from \"redux\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nexport type PostType = {\r\n  id: number\r\n  message: string\r\n  likesCount: number\r\n}\r\ntype ContactsType = {\r\n  github: string\r\n  vk: string\r\n  facebook: string\r\n  instagram: string\r\n  twitter: string\r\n  website: string\r\n  youtube: string\r\n  mainLink: string\r\n}\r\ntype PhotosType = {\r\n  small: string\r\n  large: string\r\n}\r\nexport type ProfileType = {\r\n  userId: number\r\n  lookingForAJob: boolean\r\n  lookingForAJobDescription: string\r\n  fullName: string\r\n  contacts: ContactsType\r\n  photos: PhotosType\r\n  status: string\r\n}\r\n\r\nlet initialState = {\r\n  posts: [\r\n    {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n    {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n  ] as Array<PostType>,\r\n  profile: null as ProfileType | null,\r\n  status: \"\"\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport type ActionsTypes =\r\n  ReturnType<typeof addPostAC>\r\n  | ReturnType<typeof setUserProfile>\r\n  | ReturnType<typeof setStatus>\r\n\r\n\r\nexport const profileReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case \"profile/ADD-POST\": {\r\n      const newPost: PostType = {\r\n        id: new Date().getTime(),\r\n        message: action.newPostText,\r\n        likesCount: 0\r\n      }\r\n      return {\r\n        ...state,\r\n        posts: [...state.posts, newPost],\r\n        // newPostText: \"\"\r\n      };\r\n    }\r\n    case \"profile/SET_USER_PROFILE\": {\r\n      return {\r\n        ...state,\r\n        profile: action.profile\r\n      };\r\n    }\r\n    case \"profile/SET_STATUS\": {\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const addPostAC = (newPostText: string) => {\r\n  return {\r\n    type: \"profile/ADD-POST\",\r\n    newPostText\r\n  } as const\r\n}\r\n\r\nexport const setUserProfile = (profile: ProfileType) => {\r\n  return {\r\n    type: \"profile/SET_USER_PROFILE\",\r\n    profile\r\n  } as const\r\n}\r\n\r\nexport const setStatus = (status: string) => {\r\n  return {\r\n    type: \"profile/SET_STATUS\",\r\n    status\r\n  } as const\r\n}\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  const response = await usersAPI.getProfile(userId)\r\n  dispatch(setUserProfile(response.data))\r\n}\r\n\r\nexport const getStatus = (userId: number) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  const response = await profileAPI.getStatus(userId)\r\n  dispatch(setStatus(response.data))\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: Dispatch<ActionsTypes>) => {\r\n  const response = await profileAPI.updateStatus(status)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setStatus(status))\r\n  }\r\n}\r\n\r\nexport default profileReducer","import {Redirect} from \"react-router-dom\";\r\nimport React, {ComponentType} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\nreturn {\r\n  isAuth: state.auth.isAuth\r\n}\r\n}\r\n\r\nexport function withAuthRedirect <T>(Component: ComponentType<T>)  {\r\nconst RedirectComponent = (props: MapStatePropsType) => {\r\n  let {isAuth, ...restProps} = props\r\n  if (!isAuth) return <Redirect to={\"/login\"} />\r\n  return <Component {...restProps as T}/>\r\n}\r\n\r\nlet ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n  return ConnectedRedirectComponent\r\n}\r\n\r\n","import {\r\n  Action,\r\n  applyMiddleware,\r\n  combineReducers,\r\n  compose,\r\n  createStore\r\n} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport {usersReducer} from \"./usersReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport thunkMiddleware, {ThunkAction} from \"redux-thunk\";\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport {appReducer} from \"./appReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  dialogsPage: dialogsReducer,\r\n  usersPage: usersReducer,\r\n  auth: authReducer,\r\n  form: formReducer,\r\n  app: appReducer\r\n})\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n//export const store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>;\r\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import {ActionsTypes} from \"./store\";\r\n\r\nconst SEND_MESSAGE = 'dialogs/SEND-MESSAGE';\r\n\r\nexport type DialogsType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nexport type MessageType = {\r\n  id: number\r\n  message: string\r\n}\r\n\r\nlet initialState = {\r\n  dialogs: [\r\n    {id: 1, name: 'Maks'},\r\n    {id: 2, name: 'Boris'},\r\n    {id: 3, name: 'Valera'},\r\n    {id: 4, name: 'Olya'},\r\n    {id: 5, name: 'Natasha'},\r\n    {id: 6, name: 'Sergey'}\r\n  ] as Array<DialogsType>,\r\n  messages: [\r\n    {id: 1, message: 'Hi'},\r\n    {id: 2, message: 'How are you?'},\r\n    {id: 3, message: 'Yo'},\r\n    {id: 4, message: 'Where are you?'},\r\n    {id: 5, message: 'Relax'},\r\n    {id: 6, message: 'Yep'}\r\n  ] as Array<MessageType>\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nexport const dialogsReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n  switch (action.type) {\r\n    case SEND_MESSAGE: {\r\n      let body = action.newMessageBody;\r\n\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, {id: 6, message: body}]\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport const sendMessageAC = (newMessageBody: string) => {\r\n  return {\r\n    type: SEND_MESSAGE, newMessageBody\r\n  } as const\r\n}\r\n\r\nexport default dialogsReducer","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__8vOZa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__o70OO\",\"item\":\"Navbar_item__39kXx\",\"activeLink\":\"Navbar_activeLink__1REca\"};","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  withCredentials: true,\r\n  baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n  headers: {\"API-KEY\": \"0c074aaa-aceb-492d-a73f-9ca4f6d5a703\"}\r\n})\r\n\r\nexport const usersAPI = {\r\n  getUsers(currentPage: number, pageSize: number) {\r\n    return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n      .then(response => {\r\n          return response.data\r\n        }\r\n      )\r\n  },\r\n  follow(userId: number) {\r\n    return instance.post(`follow/${userId}`\r\n    )\r\n  },\r\n  unfollow(userId: number) {\r\n    return instance.delete(`follow/${userId}`)\r\n  },\r\n  getProfile(userId: number) {\r\n    console.warn('Obsolete method. Please profileAPI object')\r\n    return profileAPI.getProfile(userId)\r\n  }\r\n}\r\n\r\nexport const profileAPI = {\r\n  getProfile(userId: number) {\r\n    return instance.get(`profile/` + userId)\r\n  },\r\n  getStatus(userId: number) {\r\n    return instance.get(`profile/status/` + userId)\r\n  },\r\n  updateStatus(status: string) {\r\n    return instance.put(`profile/status`, {status: status})\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  me() {\r\n    return instance.get(`auth/me`)\r\n  },\r\n  login(email: string, password: string, rememberMe: boolean = false) {\r\n    return instance.post(`auth/login`, {email, password, rememberMe})\r\n  },\r\n  logout() {\r\n    return instance.delete(`auth/login`)\r\n  }\r\n}\r\n\r\n","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api\";\r\nimport {FormAction, stopSubmit} from \"redux-form\";\r\nimport {BaseThunkType} from \"./redux-store\";\r\n\r\ntype ActionTypes = ReturnType<typeof setAuthUserData>\r\n\r\nconst initialState: InitialStateType = {\r\n  id: null,\r\n  email: null,\r\n  login: null,\r\n  isAuth: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n  id: number | null,\r\n  email: string | null,\r\n  login: string | null,\r\n  isAuth: boolean\r\n}\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'auth/SET_USER_DATA':\r\n      return {\r\n        ...state,\r\n        id: action.payload.id,\r\n        isAuth: action.payload.isAuth,\r\n        login: action.payload.login,\r\n        email: action.payload.email\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setAuthUserData = (id: number | null, email: string | null, login: string | null, isAuth: boolean) => {\r\n  return {\r\n    type: 'auth/SET_USER_DATA', payload: {id, email, login, isAuth}\r\n  } as const\r\n};\r\n\r\nexport const getAuthUserData = () => async (dispatch: Dispatch<ActionTypes>) => {\r\n  const response = await authAPI.me()\r\n  if (response.data.resultCode === 0) {\r\n    let {id, login, email} = response.data.data;\r\n    dispatch(setAuthUserData(id, email, login, true))\r\n  }\r\n}\r\n\r\ntype ThunkType = BaseThunkType<ActionTypes | FormAction>\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean): ThunkType => async (dispatch) => {\r\n  const response = await authAPI.login(email, password, rememberMe)\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(getAuthUserData())\r\n  } else {\r\n    const message = response.data.messages.length > 0 ? response.data.messages[0] : 'some error'\r\n    dispatch(stopSubmit(\"login\", {_error: message}))\r\n  }\r\n}\r\n\r\nexport const logout = () => async (dispatch: Dispatch<ActionTypes>) => {\r\n  const response = await authAPI.logout()\r\n  if (response.data.resultCode === 0) {\r\n    dispatch(setAuthUserData(null, null, null, false))\r\n  }\r\n}","import React from \"react\";\r\nimport classes from './Navbar.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n  return <nav className={classes.nav}>\r\n    <div className={classes.item}><NavLink to=\"/profile\" activeClassName={classes.activeLink}>Profile</NavLink></div>\r\n    <div className={classes.item}><NavLink to=\"/dialogs\" activeClassName={classes.activeLink}>Messages</NavLink></div>\r\n    <div className={classes.item}><NavLink to=\"/news\" activeClassName={classes.activeLink}>News</NavLink></div>\r\n    <div className={classes.item}><NavLink to=\"/music\" activeClassName={classes.activeLink}>Music</NavLink></div>\r\n    <div className={classes.item}><NavLink to=\"/settings\" activeClassName={classes.activeLink}>Settings</NavLink></div>\r\n    <div className={classes.item}><NavLink to=\"/users\" activeClassName={classes.activeLink}>Users</NavLink></div>\r\n  </nav>\r\n}\r\n\r\nexport default Navbar\r\n","import React from \"react\";\r\n\r\nconst News = () => {\r\n  return (\r\n    <div>\r\n      News\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;","import React, {useState} from \"react\";\r\nimport classes from \"../../common/Paginator/Paginator.module.css\";\r\nimport cn from \"classnames\"\r\n\r\ntype PropsType = {\r\n  onPageChanged: (pageNumber: number) => void\r\n  totalItemsCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  portionSize: number\r\n}\r\n\r\nexport let Paginator = (props: PropsType) => {\r\n\r\n  let pagesCont = Math.ceil(props.totalItemsCount / props.pageSize);\r\n  let pages = [];\r\n  for (let i = 1; i <= pagesCont; i++) {\r\n      pages.push(i);\r\n  }\r\n\r\n  let portionCount = Math.ceil(pagesCont / props.portionSize)\r\n  let [portionNumber, setPortionNumber] = useState(1)\r\n  const leftPortionPageNumber = (portionNumber - 1) * props.portionSize + 1\r\n  const rightPortionPageNumber = portionNumber * props.portionSize\r\n\r\n  return <div className={cn(classes.paginator)}>\r\n    {portionNumber > 1 &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber - 1)\r\n      }}>PREV</button>}\r\n    {pages\r\n      .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n      .map(p => {\r\n        return <span className={cn({\r\n          [classes.selectedPage]: props.currentPage === p\r\n        }, classes.pageNumber)}\r\n                     key={p}\r\n                     onClick={(e) => {\r\n                       props.onPageChanged(p);\r\n                     }}>{p}</span>\r\n      })}\r\n    {portionCount > portionNumber &&\r\n      <button onClick={() => {\r\n        setPortionNumber(portionNumber + 1)\r\n      }}>NEXT</button>}\r\n  </div>\r\n}","export default __webpack_public_path__ + \"static/media/user.3243e530.png\";","import React from \"react\";\r\nimport classes from \"./Users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  user: UserType\r\n  follow: (userID: number) => void\r\n  unfollow: (userID: number) => void\r\n  followingInProgress: number[]\r\n}\r\n\r\nexport let User = ({user, follow, unfollow, followingInProgress}: PropsType) => {\r\n  return (\r\n     <div>\r\n      <span>\r\n        <div>\r\n          <NavLink to={'/profile/' + user.id}>\r\n        <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n             className={classes.userPhoto} alt={'user'}/>\r\n            </NavLink>\r\n      </div>\r\n      <div>\r\n        {user.followed\r\n          ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      unfollow(user.id)\r\n                    }}>Unfollow</button>\r\n          : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                    onClick={() => {\r\n                      follow(user.id)\r\n                    }}>Follow</button>}\r\n      </div></span>\r\n      <span>\r\n<span>\r\n  <div>{user.name}</div>\r\n  <div>{user.status}</div>\r\n</span>\r\n<span>\r\n  <div>{\"user.location.country\"}</div><div>{\"user.location.city\"}</div>\r\n</span>\r\n      </span>\r\n    </div>)\r\n}","import React from \"react\";\r\nimport {UserType} from \"../../redux/usersReducer\";\r\nimport {Paginator} from \"../common/Paginator/Paginator\";\r\nimport {User} from \"./User\";\r\n\r\ntype PropsType = {\r\n  onPageChanged: (pageNumber: number) => void\r\n  totalItemsCount: number\r\n  pageSize: number\r\n  currentPage: number\r\n  users: Array<UserType>\r\n  follow: (userID: number) => void\r\n  unfollow: (userID: number) => void\r\n  followingInProgress: number[]\r\n}\r\n\r\nexport let Users = (props: PropsType) => {\r\n  return <div>\r\n    <Paginator onPageChanged={props.onPageChanged}\r\n               totalItemsCount={props.totalItemsCount}\r\n               pageSize={props.pageSize}\r\n               currentPage={props.currentPage}\r\n               portionSize={10}/>\r\n    <div>\r\n      {props.users.map(u => <User user={u}\r\n                                  key={u.id}\r\n                                  followingInProgress={props.followingInProgress}\r\n                                  follow={props.follow}\r\n                                  unfollow={props.unfollow}\r\n      />)\r\n      }\r\n    </div>\r\n  </div>\r\n}","import {AppStateType} from \"./redux-store\";\r\n\r\nexport const getUsers = (state: AppStateType) => {\r\n  return state.usersPage.users\r\n}\r\n\r\nexport const getPageSize = (state: AppStateType) => {\r\n  return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state: AppStateType) => {\r\n  return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state: AppStateType) => {\r\n  return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state: AppStateType) => {\r\n  return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state: AppStateType) => {\r\n  return state.usersPage.followingInProgress\r\n}","import React from \"react\";\r\nimport {\r\n  follow, requestUsers,\r\n  setCurrentPage,\r\n  unfollow,\r\n  UserType\r\n} from \"../../redux/usersReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {Users} from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {ActionsTypes} from \"../../redux/store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {\r\n  getCurrentPage, getFollowingInProgress, getIsFetching,\r\n  getPageSize,\r\n  getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\ntype MapStatePropsType = {\r\n  users: Array<UserType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: number[]\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n  follow: (userID: number) => void\r\n  unfollow: (userID: number) => void\r\n  setUsers: (users: Array<UserType>) => void\r\n  setCurrentPage: (pageNumber: number) => void\r\n  setTotalUsersCount: (totalCount: number) => void\r\n  dispatch: Dispatch<ActionsTypes>\r\n  getUsers: (currentPage: number, pageSize: number) => void\r\n}\r\n\r\nexport type UsersPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nclass UsersContainer extends React.Component<UsersPropsType> {\r\n  componentDidMount() {\r\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\r\n  }\r\n\r\n  onPageChanged = (pageNumber: number) => {\r\n    this.props.getUsers(pageNumber, this.props.pageSize)\r\n     ;\r\n  }\r\n\r\n  render() {\r\n    return <>\r\n      {this.props.isFetching ? <Preloader/> : \"\"}\r\n      <Users\r\n        totalItemsCount={this.props.totalUsersCount}\r\n        pageSize={this.props.pageSize}\r\n        currentPage={this.props.currentPage}\r\n        onPageChanged={this.onPageChanged}\r\n        users={this.props.users}\r\n        follow={this.props.follow}\r\n        unfollow={this.props.unfollow}\r\n        followingInProgress={this.props.followingInProgress}\r\n      />\r\n    </>\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n  return {\r\n    users: getUsers(state),\r\n    pageSize: getPageSize(state),\r\n    totalUsersCount: getTotalUsersCount(state),\r\n    currentPage: getCurrentPage(state),\r\n    isFetching: getIsFetching(state),\r\n    followingInProgress: getFollowingInProgress(state)\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  withAuthRedirect,\r\n  connect(mapStateToProps, {follow, unfollow, setCurrentPage, getUsers: requestUsers})\r\n)(UsersContainer)","import React from \"react\";\r\nimport classes from './Header.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  isAuth: boolean,\r\n  login: string | null\r\n  logout: () => void\r\n}\r\n\r\nconst Header = (props: PropsType) => {\r\n  return <header className={classes.header}>\r\n    <span className={classes.logoText}>Kawabanga</span>\r\n    <div className={classes.loginBlock}>\r\n      {props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button></div> :\r\n        <NavLink to=\"/login\">\r\n          Login\r\n        </NavLink>}\r\n    </div>\r\n  </header>\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/authReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\n\r\ntype MapStatePropsType = {\r\n  isAuth: boolean\r\n  id: number | null\r\n  email: string | null\r\n  login: string | null\r\n}\r\n\r\ntype MapDispatchToProps = {\r\n  logout: () => void\r\n}\r\n\r\nexport type PropsType = MapStatePropsType & MapDispatchToProps\r\n\r\n\r\nclass HeaderContainer extends React.Component<PropsType> {\r\n  render() {\r\n    return <Header {...this.props} isAuth={this.props.isAuth}\r\n                   login={this.props.login}/>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => ({\r\n  isAuth: state.auth.isAuth,\r\n  login: state.auth.login,\r\n  id: state.auth.id,\r\n  email: state.auth.email\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)\r\n","import {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/authReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport classes\r\n  from \"../../components/common/FormsControls/FormsControls.module.css\";\r\n\r\n\r\n\r\ntype FormDataType = {\r\n  email: string\r\n  password: string\r\n  rememberMe: boolean\r\n}\r\n\r\ntype PropsType = {\r\n  login: (email: string, password: string, rememberMe: boolean) => void\r\n  isAuth: boolean\r\n}\r\n\r\nexport const LoginForm: React.FC<InjectedFormProps<FormDataType>> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field placeholder={'Email'} name={'email'}\r\n               validate={[required]}\r\n               component={Input}/>\r\n      </div>\r\n      <div>\r\n        <Field placeholder={'password'} name={'password'}\r\n               type={\"password\"}\r\n               validate={[required]}\r\n               component={Input}/>\r\n      </div>\r\n      <div>\r\n        <Field type={'checkbox'} name={'rememberMe'} component={Input}/>remember\r\n        me\r\n      </div>\r\n      {props.error && <div className={classes.formSummaryError}>\r\n        {props.error}\r\n      </div>}\r\n      <div>\r\n        <button>Login</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: PropsType) => {\r\n  const onSubmit = (formData: FormDataType) => {\r\n    props.login(formData.email, formData.password, formData.rememberMe)\r\n  }\r\n\r\n  if (props.isAuth) {\r\n    return <Redirect to={\"/profile\"}/>\r\n  }\r\n\r\n  return <div className={classes.main}>\r\n    <h1>Login</h1>\r\n    <div>\r\n      <span>Hi ✋</span>\r\n      <span>To test my site use:</span>\r\n      <br/>\r\n      <span><b>Email:</b> free@samuraijs.com</span>\r\n      <br/>\r\n      <span><b>Password:</b> free</span>\r\n    </div>\r\n    <LoginReduxForm onSubmit={onSubmit}/>\r\n  </div>\r\n}\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import React, {ComponentType} from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\n\r\nexport function withSuspense <T>(Component: ComponentType<T>)  {\r\n  return (props: any) => {\r\n   return <React.Suspense fallback={<Preloader/>}>\r\n    <Component {...props} />\r\n   </React.Suspense>\r\n  }\r\n}\r\n\r\n","import React  from \"react\";\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport News from \"./components/News/News\";\nimport Music from \"./components/Music/Music\";\nimport Settings from \"./components/Settings/Settings\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {initializedApp} from \"./redux/appReducer\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {withSuspense} from \"./hoc/withSuspense\";\nconst ProfileContainer = React.lazy(() => import(\"./components/Profile/ProfileContainer\"));\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"));\n\ntype MapStatePropsType = {\n  initialized: boolean\n}\n\ntype MapDispatchToProps = {\n  initializedApp: () => void\n}\n\ntype PropsType = MapStatePropsType & MapDispatchToProps\n\nclass App extends Component<PropsType> {\n  componentDidMount() {\n    this.props.initializedApp()\n  }\n\n  render() {\n    if (!this.props.initialized) {\n      return <Preloader/>\n    }\n\n    return (\n      <HashRouter>\n        <div className='app-wrapper'>\n          <HeaderContainer/>\n          <Navbar/>\n          <div className='app-wrapper-content'>\n            <Switch>\n              <Route path='/login' component={Login}/>\n              <Route path='/profile/:userId?'\n                     render={withSuspense(ProfileContainer)}/>\n              <Route path='/dialogs'\n                     render={withSuspense(DialogsContainer)}/>\n              <Route path='/news' component={News}/>\n              <Route path='/music' component={Music}/>\n              <Route path='/settings' component={Settings}/>\n              <Route path='/users' component={UsersContainer}/>\n            </Switch>\n          </div>\n        </div>\n      </HashRouter>)\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized\n})\n\nexport default connect(mapStateToProps, {initializedApp})(App)\n","import ReactDOM from 'react-dom';\nimport App from './App';\nimport {store} from './redux/redux-store'\nimport {Provider} from \"react-redux\";\n\n\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'))","import {Dispatch} from \"redux\";\r\nimport {usersAPI} from \"../api/api\";\r\n\r\ntype UsersLocation = {\r\n  city: string\r\n  country: string\r\n}\r\n\r\ntype PhotosType = {\r\n  small: string | null\r\n  large: string | null\r\n}\r\n\r\nexport type UserType = {\r\n  id: number\r\n  photoUrl?: string\r\n  photos: PhotosType\r\n  followed: boolean\r\n  name: string\r\n  status: string\r\n  location?: UsersLocation\r\n}\r\n\r\ntype ActionTypes =\r\n  ReturnType<typeof followSuccess>\r\n  | ReturnType<typeof unfollowSuccess>\r\n  | ReturnType<typeof setUsers>\r\n  | ReturnType<typeof setCurrentPage>\r\n  | ReturnType<typeof setTotalUsersCount>\r\n  | ReturnType<typeof toggleIsFetching>\r\n  | ReturnType<typeof toggleFollowingProgress>\r\n\r\nconst initialState: InitialStateType = {\r\n  users: [],\r\n  pageSize: 10,\r\n  totalUsersCount: 0,\r\n  currentPage: 1,\r\n  setCurrentPage: 1,\r\n  isFetching: false,\r\n  followingInProgress: []\r\n}\r\n\r\nexport type InitialStateType = {\r\n  users: Array<UserType>\r\n  pageSize: number\r\n  totalUsersCount: number\r\n  currentPage: number\r\n  setCurrentPage: number\r\n  isFetching: boolean\r\n  followingInProgress: number[]\r\n}\r\n\r\nexport const usersReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'users/FOLLOW':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.usersID) {\r\n            return {...u, followed: true};\r\n          }\r\n          return u;\r\n        })\r\n      };\r\n    case 'users/UNFOLLOW':\r\n      return {\r\n        ...state,\r\n        users: state.users.map(u => {\r\n          if (u.id === action.usersID) {\r\n            return {...u, followed: false};\r\n          }\r\n          return u;\r\n        })\r\n      };\r\n    case 'users/SET_USERS':\r\n      return {\r\n        ...state,\r\n        users: action.users\r\n      }\r\n    case 'users/SET_CURRENT_PAGE':\r\n      return {\r\n        ...state,\r\n        currentPage: action.currentPage\r\n      }\r\n    case 'users/SET_TOTAL_USERS_COUNT':\r\n      return {\r\n        ...state,\r\n        totalUsersCount: action.totalUsersCount\r\n      }\r\n    case 'users/TOGGLE_IS_FETCHING':\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching\r\n      }\r\n    case 'users/TOGGLE_IS_FOLLOWING_PROGRESS':\r\n      return {\r\n        ...state,\r\n        followingInProgress: action.isFetching\r\n          ? [...state.followingInProgress, action.userId]\r\n          : state.followingInProgress.filter(id => id !== action.userId)\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const followSuccess = (usersID: number) => {\r\n  return {\r\n    type: 'users/FOLLOW',\r\n    usersID: usersID\r\n  } as const\r\n};\r\nexport const unfollowSuccess = (usersID: number) => {\r\n  return {\r\n    type: 'users/UNFOLLOW',\r\n    usersID: usersID\r\n  } as const\r\n};\r\nexport const setUsers = (users: Array<UserType>) => {\r\n  return {\r\n    type: 'users/SET_USERS',\r\n    users: users\r\n  } as const\r\n}\r\n\r\nexport const setCurrentPage = (currentPage: number) => {\r\n  return {\r\n    type: 'users/SET_CURRENT_PAGE',\r\n    currentPage: currentPage\r\n  } as const\r\n}\r\n\r\nexport const setTotalUsersCount = (totalUsersCount: number) => {\r\n  return {\r\n    type: 'users/SET_TOTAL_USERS_COUNT',\r\n    totalUsersCount\r\n  } as const\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching: boolean) => {\r\n  return {\r\n    type: 'users/TOGGLE_IS_FETCHING',\r\n    isFetching\r\n  } as const\r\n}\r\n\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) => {\r\n  return {\r\n    type: 'users/TOGGLE_IS_FOLLOWING_PROGRESS',\r\n    isFetching, userId\r\n  } as const\r\n}\r\n\r\nexport const requestUsers = (currentPage: number, pageSize: number) => {\r\n  return async (dispatch: Dispatch<ActionTypes>) => {\r\n    dispatch(toggleIsFetching(true))\r\n    const data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(setCurrentPage(currentPage))\r\n    dispatch(toggleIsFetching(false))\r\n    dispatch(setUsers(data.items))\r\n    dispatch(setTotalUsersCount(data.totalCount))\r\n  }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n  return async (dispatch: Dispatch<ActionTypes>) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await usersAPI.follow(userId)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(followSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n  }\r\n}\r\n\r\nexport const unfollow = (userId: number) => {\r\n  return async (dispatch: Dispatch<ActionTypes>) => {\r\n    dispatch(toggleFollowingProgress(true, userId))\r\n    const response = await usersAPI.unfollow(userId)\r\n    if (response.data.resultCode === 0) {\r\n      dispatch(unfollowSuccess(userId))\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId))\r\n  }\r\n}","export default __webpack_public_path__ + \"static/media/preloader.67b2533e.svg\";","import preloader from \"../../../assets/images/preloader.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = () => {\r\nreturn <img src={preloader} alt={''}/>\r\n}\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__2sHEE\",\"error\":\"FormsControls_error__1hGcs\",\"formSummaryError\":\"FormsControls_formSummaryError__2bLKP\",\"main\":\"FormsControls_main__3d9EZ\"};","import classes from \"./FormsControls.module.css\";\r\nimport React from \"react\";\r\nimport {WrappedFieldMetaProps, WrappedFieldProps} from \"redux-form\";\r\n\r\ntype FormControlPropsType = {\r\n  meta: WrappedFieldMetaProps\r\n}\r\n\r\nconst FormControl: React.FC<FormControlPropsType> = ({meta: {touched,error},children}) => {\r\n  const hasError = touched && error\r\n  return (\r\n    <div className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}>\r\n      <div>\r\n        {children}\r\n      </div>\r\n      {hasError && <span>{error}</span>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const Textarea: React.FC<WrappedFieldProps> = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input: React.FC<WrappedFieldProps> = (props) => {\r\n  const {input, meta, ...restProps} = props\r\n  return  <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\n\r\n\r\n// import classes from \"./FormsControls.module.css\";\r\n//\r\n// const FormControl = ({input, meta, child, ...props}: any) => {\r\n//   const hasError = meta.touched && meta.error\r\n//   return (\r\n//     <div className={classes.formControl + \" \" + (hasError ? classes.error : \" \")}>\r\n//       <div>\r\n//         {props.children}\r\n//       </div>\r\n//       {hasError && <span>{meta.error}</span>}\r\n//     </div>\r\n//   )\r\n// }\r\n//\r\n// export const Textarea = (props: any) => {\r\n//   const {input, meta, child, ...restProps} = props\r\n//   return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n// }\r\n//\r\n// export const Input = (props: any) => {\r\n//   const {input, meta, child, ...restProps} = props\r\n//   return  <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n// }","import {getAuthUserData} from \"./authReducer\";\r\nimport {AppStateType} from \"./redux-store\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\n\r\ntype ActionTypes = ReturnType<typeof initializedSuccess>\r\n\r\nconst initialState: InitialStateType = {\r\n  initialized: false\r\n}\r\n\r\nexport type InitialStateType = {\r\n  initialized: boolean\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionTypes): InitialStateType => {\r\n  switch (action.type) {\r\n    case 'app/INITIALIZED_SUCCESS':\r\n      return {\r\n        ...state,\r\n        initialized: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const initializedSuccess = () => {\r\n  return {\r\n    type: 'app/INITIALIZED_SUCCESS'\r\n  } as const\r\n};\r\n\r\nexport const initializedApp = (): ThunkType =>  (dispatch) => {\r\n  let promise = dispatch(getAuthUserData());\r\n  promise.then(()=>{\r\n    dispatch(initializedSuccess())\r\n  })\r\n}\r\n\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionTypes>\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__Wnhnm\",\"pageNumber\":\"Paginator_pageNumber__1fw8N\",\"selectedPage\":\"Paginator_selectedPage__1RjkC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2CSR8\",\"logoText\":\"Header_logoText__1mZmI\",\"loginBlock\":\"Header_loginBlock__2l0I9\"};","export type FieldValidatorType = (value: string) => string | undefined\r\n\r\nexport const required: FieldValidatorType = (value) => {\r\n  if (value) return undefined;\r\n  return \"Field is required!\"\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength: number): FieldValidatorType => (value) => {\r\n  if (value && value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n  return undefined\r\n}"],"sourceRoot":""}