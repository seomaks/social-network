{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Myposts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatus.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","assets/images/heart.png","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["module","exports","ProfileStatus","state","editMode","status","props","activateEditMode","setState","deactivateEditMode","updateStatus","onStatusChange","e","currentTarget","value","prevProps","prevState","this","onDoubleClick","onChange","autoFocus","onBlur","React","Component","ProfileInfo","profile","className","classes","descriptionBlock","src","photos","large","alt","fullName","lookingForAJob","lookingForAJobDescription","contacts","vk","github","facebook","twitter","website","instagram","mainLink","youtube","Preloader","Post","item","message","icon","likeIcon","likesCount","MyPosts","postsElements","profilePage","posts","map","p","id","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","postsBlock","values","addPost","newPostText","MyPostsContainer","connect","dispatch","addPostAC","Profile","isAuth","to","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","console","error","compose","auth","withRouter"],"mappings":"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","file":"static/js/3.41278169.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"proImg\":\"ProfileInfo_proImg__1s-O2\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3D_lU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"Myposts_postsBlock__KOlwO\",\"posts\":\"Myposts_posts__9GZy8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__214EX\",\"icon\":\"Post_icon__1My9l\"};","import React, {ChangeEvent} from \"react\";\r\n\r\ntype PropsType = {\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nclass ProfileStatus extends React.Component<PropsType> {\r\n  state = {\r\n    editMode: false,\r\n    status: this.props.status\r\n  }\r\n\r\n  activateEditMode = () => {\r\n    this.setState({\r\n      editMode: true\r\n    })\r\n  }\r\n\r\n  deactivateEditMode = () => {\r\n    this.setState({\r\n      editMode: false\r\n    })\r\n    this.props.updateStatus(this.state.status)\r\n  }\r\n\r\n  onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    this.setState({\r\n      status: e.currentTarget.value\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps: Readonly<PropsType>, prevState: Readonly<{}>) {\r\n    if (prevProps.status !== this.props.status) {\r\n      this.setState({\r\n        status: this.props.status\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {!this.state.editMode &&\r\n        <div>\r\n          <span onDoubleClick={this.activateEditMode}>{this.props.status || \"your status is here\"}</span>\r\n        </div>}\r\n        {this.state.editMode &&\r\n        <div>\r\n          <input onChange={this.onStatusChange} autoFocus\r\n                 onBlur={this.deactivateEditMode} value={this.state.status}/>\r\n        </div>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ProfileStatus","import React from \"react\";\r\nimport classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {ProfileType} from \"../../../redux/profileReducer\";\r\nimport ProfileStatus from \"./ProfileStatus\";\r\n\r\ntype PropsType = {\r\n  profile: ProfileType | null\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nconst ProfileInfo = (props: PropsType) => {\r\n  if (!props.profile) {\r\n    return <Preloader/>\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt={\"\"}/>\r\n        <ProfileStatus status={props.status} updateStatus={props.updateStatus}/>\r\n        <div>Full name: {props.profile.fullName}</div>\r\n        <div>Looking for a job: {props.profile.lookingForAJob}</div>\r\n        {props.profile.lookingForAJobDescription}\r\n        <ul>My contacts:\r\n          <li>VK: {props.profile.contacts.vk}</li>\r\n          <li>GitHub: {props.profile.contacts.github}</li>\r\n          <li>Facebook: {props.profile.contacts.facebook}</li>\r\n          <li>Twitter: {props.profile.contacts.twitter}</li>\r\n          <li>WebSite: {props.profile.contacts.website}</li>\r\n          <li>Instagram: {props.profile.contacts.instagram}</li>\r\n          <li>MainLink: {props.profile.contacts.mainLink}</li>\r\n          <li>YouTube: {props.profile.contacts.youtube}</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo","export default __webpack_public_path__ + \"static/media/heart.a13e3857.png\";","import React from 'react'\r\nimport classes from './Post.module.css';\r\nimport likeIcon from \"../../../../assets/images/heart.png\";\r\n\r\ntype PostType = {\r\n  likesCount: number\r\n  message: string\r\n}\r\n\r\nconst Post = (props: PostType) => {\r\n  return (\r\n    <div className={classes.item}>\r\n      <img\r\n        src='https://i.pinimg.com/736x/c1/62/15/c162157d47257988b3cfe228479389d0.jpg'\r\n        alt=''/>\r\n      {props.message}\r\n      <div className={classes.icon}>\r\n        <img src={likeIcon}/>\r\n        {props.likesCount}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post\r\n","import React from \"react\";\r\nimport classes from './Myposts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {PostsPropsType} from \"./MyPostsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype PostDataType = {\r\n  newPostText: string\r\n}\r\n\r\nconst MyPosts = (props: PostsPropsType) => {\r\n  const postsElements = props.profilePage.posts.map(p => <Post\r\n    likesCount={p.likesCount}\r\n    message={p.message}\r\n    key={p.id}\r\n  />)\r\n\r\n  const maxLength10 = maxLengthCreator(10)\r\n\r\n  let AddNewPostForm: React.FC<InjectedFormProps<PostDataType>> = (props) => {\r\n    return (\r\n      <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n          <Field name=\"newPostText\" component={Textarea}\r\n                 placeholder={\"Post message\"}\r\n                 validate={[required, maxLength10]}/>\r\n        </div>\r\n        <div>\r\n          <button>Add post</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n\r\n  let AddNewPostFormRedux = reduxForm<PostDataType>({form: \"ProfileAddNewPostForm\"})(AddNewPostForm)\r\n  const onAddPost = (values: { newPostText: string }) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.postsBlock}>\r\n      <h3>My posts</h3>\r\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n      <div className={classes.posts}>\r\n        {postsElements}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default MyPosts","import {\r\n  addPostAC,\r\n  InitialStateType\r\n} from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapStatePropsType = {\r\n  profilePage: InitialStateType\r\n}\r\n\r\ntype mapDispatchPropsType = {\r\n    addPost: (messageForNewPost: string)=> void\r\n}\r\n\r\nexport type PostsPropsType = mapStatePropsType & mapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): mapStatePropsType => {\r\n  return {\r\n    profilePage: state.profilePage\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n  return {\r\n    addPost: (newPostText: string) => {\r\n      dispatch(addPostAC(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileType} from \"../../redux/profileReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  isAuth: boolean\r\n  profile: ProfileType | null\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n}\r\n\r\nconst Profile = (props: PropsType) => {\r\n  if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n  getStatus,\r\n  getUserProfile,\r\n  updateStatus,\r\n} from \"../../redux/profileReducer\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\r\n\r\n\r\ntype MapDispatchPropsType = {\r\n  getUserProfile: (userId: number) => void\r\n  getStatus: (userId: number | string | null) => void\r\n  updateStatus: (status: string) => void\r\n}\r\ntype OwnPropsType = MapStateToPropsType & MapDispatchPropsType\r\ntype PropsType = RouteComponentProps<PathParamsType> & OwnPropsType\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n  componentDidMount() {\r\n    let userId: number | null = +this.props.match.params.userId;\r\n    if (!userId) {\r\n      //     userId = this.props.authorizedUserId!.toString()\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\");\r\n      }\r\n    }\r\n\r\n    if (!userId) {\r\n      console.error(\"ID should exists in URI params or in state ('authorizedUserId')\");\r\n    } else {\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Profile {...this.props} profile={this.props.profile}\r\n                 status={this.props.status}\r\n                 updateStatus={this.props.updateStatus}\r\n                 isAuth={this.props.isAuth}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.id,\r\n  isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\r\n  withRouter,\r\n  // withAuthRedirect // login on the profile page\r\n)(ProfileContainer)\r\n\r\n"],"sourceRoot":""}