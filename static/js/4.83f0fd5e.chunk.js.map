{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","path","id","className","classes","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","store","getState","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageAC","withAuthRedirect"],"mappings":"2GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,sFCYpMC,EATI,SAACC,GAClB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAQC,OAAS,IAAMD,IAAQE,OAA/C,SACL,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCCfC,G,KALC,SAACT,GACf,OAAO,qBAAKG,UAAWC,IAAQM,QAAxB,SAAkCV,EAAMU,Y,0CCkC3CC,EAAcC,YAAiB,IAgB/BC,EAAsBC,YAA0B,CAACC,KAAM,wBAAjCD,EAdwC,SAACd,GACnE,OACE,uBAAMgB,SAAUhB,EAAMiB,aAAtB,UACE,8BACE,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUX,GACrBH,KAAK,iBACLe,YAAY,yBAErB,8BAAK,kDAOIC,EA3CC,SAACxB,GACf,IAAMyB,EAAQC,IAAMC,WAAWC,YAE3BC,EAAkBJ,EAAMK,QAAQC,KAAI,SAAA1B,GAAM,OAAI,cAAC,EAAD,CAChDH,GAAIG,EAAOH,GAAIM,KAAMH,EAAOG,MAAWH,EAAOH,OAC5C8B,EAAmBP,EAAMQ,SAASF,KAAI,SAAArB,GAAO,OAAI,cAAC,EAAD,CACnDR,GAAIQ,EAAQR,GAAIQ,QAASA,EAAQA,SAAcA,EAAQR,OAMzD,OACE,sBAAKC,UAAWC,IAAQ0B,QAAxB,UACE,qBAAK3B,UAAWC,IAAQ8B,aAAxB,SACGL,IAEH,sBAAK1B,UAAWC,IAAQ6B,SAAxB,UACE,8BAAMD,IACN,cAACnB,EAAD,CAAqBG,SAXL,SAACmB,GACrBnC,EAAMoC,YAAYD,EAAOE,0B,yBCYdC,sBACbC,aAfoB,SAACd,GACvB,MAAO,CACLG,YAAaH,EAAMG,gBAII,SAACY,GACxB,MAAO,CACLJ,YAAa,SAACC,GACZG,EAASC,YAAcJ,SAO3BK,IAFaJ,CAGbd","file":"static/js/4.83f0fd5e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3H0jt\",\"dialogsItems\":\"Dialogs_dialogsItems__31JbD\",\"dialog\":\"Dialogs_dialog__Zd2Y5\",\"active\":\"Dialogs_active__l9XaA\",\"messages\":\"Dialogs_messages__22HhJ\",\"message\":\"Dialogs_message__2Lkn9\"};","import classes from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {DialogsType} from \"../../../redux/dialogsReducer\";\r\n\r\nconst DialogItem = (props: DialogsType) => {\r\n  let path = \"/dialogs/\" + props.id\r\n\r\n  return <div className={classes.dialog + ' ' + classes.active}>\r\n    <NavLink to={path}>{props.name}</NavLink>\r\n  </div>\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport classes from \"./../Dialogs.module.css\";\r\nimport {MessageType} from \"../../../redux/dialogsReducer\";\r\n\r\nconst Message = (props: MessageType) => {\r\n  return <div className={classes.message}>{props.message}</div>\r\n}\r\n\r\n\r\nexport default Message;","import classes from \"./Dialogs.module.css\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {store} from \"../../redux/redux-store\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\ntype DialogDataType = {\r\n  newMessageBody: string\r\n}\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n  const state = store.getState().dialogsPage\r\n\r\n  let dialogsElements = state.dialogs.map(dialog => <DialogItem\r\n    id={dialog.id} name={dialog.name} key={dialog.id}/>)\r\n  let messagesElements = state.messages.map(message => <Message\r\n    id={message.id} message={message.message} key={message.id}/>)\r\n\r\n  const addNewMessage = (values: {newMessageBody: string} ) => {\r\n    props.sendMessage(values.newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.dialogs}>\r\n      <div className={classes.dialogsItems}>\r\n        {dialogsElements}\r\n      </div>\r\n      <div className={classes.messages}>\r\n        <div>{messagesElements}</div>\r\n        <AddMessageFormRedux onSubmit={addNewMessage} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<DialogDataType>> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field component={Textarea}\r\n               validate={[required, maxLength50]}\r\n               name=\"newMessageBody\"\r\n               placeholder=\"Enter your message\" />\r\n      </div>\r\n      <div><button>Send</button></div>\r\n    </form>\r\n  )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm<DialogDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import {\r\n  InitialStateType,\r\n  sendMessageAC,\r\n} from \"../../redux/dialogsReducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport React from \"react\";\r\n\r\ntype MapStatePropsType = {\r\n  dialogsPage: InitialStateType\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    sendMessage: (newMessageBody: string) => void\r\n}\r\n\r\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\nlet mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\nreturn {\r\n  dialogsPage: state.dialogsPage,\r\n}\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): MapDispatchPropsType => {\r\n  return {\r\n    sendMessage: (newMessageBody: string)=> {\r\n      dispatch(sendMessageAC(newMessageBody))\r\n    }\r\n  }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}